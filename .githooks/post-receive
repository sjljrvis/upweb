#!/usr/bin/env node

/*
* NPM Dependecies
*/
const axios = require('../../../node_modules/axios');
const { exec } = require('child_process');
const readline = require('readline');
const buildPack = "node"

/*
* PATHS and variables
*/

const projectPath = __dirname.split('/').slice(0, 13).join('/').toString().trim();

let repository_name = __dirname.trim().split('/')[12];

/**
 * Fuctions
*/

const triggerBuild = (commitHash,callback) => {
  let options = {
    url: "http://localhost:3000/api/v1/container/build",
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    data: {
      build_pack: buildPack,
      repository_name: repository_name,
      commit_hash: commitHash
    }
  }
  axios(options, (error, data) => {
    console.log(error,data)
    callback(null, true)
  })
}

const checkoutTree = (commitHash) => {
  exec(`GIT_WORK_TREE=${projectPath}_docker git checkout -f`, (err, stdout, stderr) => {
    if (err) {
      console.log("error in git-work-tree", err);
    }
    else {
      triggerBuild(commitHash,(err, data) => {
        console.log("-->  Files changed");
        console.log("-->  Buildpack ", buildPack);
        console.log("-->  Building app");
        console.log(`Checkout your app ${repository_name}.tocstack.com`);
        process.exit(0);
      })
    }
  })
}

/** 
 * Main REPL
*/

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});


rl.on('line', (input) => {
  let repoInfo = input.split(' ');
  let commitHash = repoInfo[1];
  checkoutTree(commitHash)
});
